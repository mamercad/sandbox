name: pr-changed

on:
  push:
    branches:
      - main
  #     - mamercad/issue-280
  pull_request_target:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

# concurrency:
#   group: cloud-integration-tests
#   cancel-in-progress: false

env:
  DEFAULT_BRANCH: remotes/origin/foo

jobs:
  integration:
    # Require reviewers for this environment
    # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
    # environment: integration
    runs-on: ubuntu-latest
    # timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: debug
        run: |
          git branch -av

      - name: git changed module_utils
        id: changed-module-utils
        run: |
          basenames=()
          for file in $(git diff --name-only $DEFAULT_BRANCH | grep 'ansible/plugins/module_utils/'); do
            basenames+=($(basename $file .py))
          done
          printf '::set-output name=matrix::%s\n' $(printf '%s\n' "${basenames[@]}" | jq -R . | jq -sc .)

      - name: git changed modules
        id: changed-modules
        run: |
          basenames=()
          for file in $(git diff --name-only $DEFAULT_BRANCH | grep 'ansible/plugins/modules/'); do
            basenames+=($(basename $file .py))
          done
          printf '::set-output name=matrix::%s\n' $(printf '%s\n' "${basenames[@]}" | jq -R . | jq -sc .)

      - name: debug
        id: debug
        run: |
          echo '${{ steps.changed-module-utils.outputs.matrix }}'
          echo '${{ steps.changed-modules.outputs.matrix }}'

    outputs:
      module-utils-matrix: ${{ steps.changed-module-utils.outputs.matrix }}
      module-matrix: ${{ steps.changed-modules.outputs.matrix }}

  debugging:
    runs-on: ubuntu-latest
    needs: [integration]
    steps:
      - run: |
          echo "${{ needs.integration.outputs.module-utils-matrix }}"
          echo "${{ needs.integration.outputs.module-matrix }}"
          echo "${{ toJSON(needs.integration.outputs.module-utils-matrix) }}"
          echo "${{ toJSON(needs.integration.outputs.module-matrix) }}"

  # test-module-utils:
  #   runs-on: ubuntu-latest
  #   needs: [integration]
  #   if: ${{ fromJSON(needs.changed-modules-utils-matrix.outputs.matrix) != 'null' }}
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       module: ${{ toJson(needs.changed-modules-utils-matrix.outputs.matrix) }}
  #   steps:
  #     - name: Perform testing (changed module_utils)
  #       if: ${{ matrix.module != 'null' }}
  #       run: |
  #         echo "Testing module_util ${{ matrix.module }}."

  # test-module:
  #   runs-on: ubuntu-latest
  #   needs: [integration]
  #   if: ${{ fromJSON(needs.changed-modules-matrix.outputs.matrix) != 'null' }}"
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       module: ${{ toJson(needs.changed-modules-matrix.outputs.matrix) }}
  #   steps:
  #     - name: Perform testing (changed modules)
  #       if: ${{ matrix.module != 'null' }}
  #       run: |
  #         echo "Testing module ${{ matrix.module }}."
